<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe-Inferred</td></tr></table><p class="caption">Main</p></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><span class="keyword">type</span> <a href="#t:Tabuleiro">Tabuleiro</a> = [String]</li><li class="src short"><span class="keyword">type</span> <a href="#t:Comandos">Comandos</a> = String</li><li class="src short"><span class="keyword">type</span> <a href="#t:Posicao">Posicao</a> = String</li><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:checkContent">checkContent</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:checkTab">checkTab</a> :: <a href="Main.html#t:Tabuleiro">Tabuleiro</a> -&gt; (Int, Int) -&gt; Int</li><li class="src short"><a href="#v:checkCmd">checkCmd</a> :: <a href="Main.html#t:Comandos">Comandos</a> -&gt; Bool</li><li class="src short"><a href="#v:checkPos">checkPos</a> :: <a href="Main.html#t:Posicao">Posicao</a> -&gt; (Int, Int) -&gt; Bool</li><li class="src short"><a href="#v:deepCheck">deepCheck</a> :: <a href="Main.html#t:Tabuleiro">Tabuleiro</a> -&gt; (Int, Int) -&gt; [String] -&gt; Int</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><span class="keyword">type</span> <a name="t:Tabuleiro" class="def">Tabuleiro</a> = [String]</p><div class="doc"><p>Tipo usado para representar tabuleiros. Cada linha do tabuleiro &#233; composto por um conjunto de carateres.
</p></div></div><div class="top"><p class="src"><span class="keyword">type</span> <a name="t:Comandos" class="def">Comandos</a> = String</p><div class="doc"><p>Tipo usado para representar uma linha de comandos. Cada comando &#233; associado a um carater.
</p></div></div><div class="top"><p class="src"><span class="keyword">type</span> <a name="t:Posicao" class="def">Posicao</a> = String</p><div class="doc"><p>Tipo usado para representar a posi&#231;&#227;o do Robot. Uma posi&#231;&#227;o v&#225;lida dever&#225; apresentar a seguinte estrutura <em>@x y ori@</em>.
</p></div></div><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p><div class="doc"><p>Este programa verifica se um ficheiro &#233; v&#225;lido para representar um n&#237;vel de LightBot. Como resultado desta verifica&#231;&#227;o o programa devolve os valores <a href="OK">OK</a>
quando o ficheiro &#233; v&#225;lido; <a href="num">num</a> em que <em>num</em> &#233; a primeira linha em que o ficheiro diverge das normas especificadas. 
</p></div></div><div class="top"><p class="src"><a name="v:checkContent" class="def">checkContent</a> :: [String] -&gt; Int</p><div class="doc"><p><a href="checkContent.html">checkContent</a> recebe um ficheiro, <code>[String]</code>, e verifica se a sua estrutura &#233; v&#225;lida para um n&#237;vel de LightBot. Uma estrutura v&#225;lida obdece &#224;s seguintes normas:
</p><ul><li> tem pelo menos 3 linhas;
</li><li> pode ser dividida em tr&#234;s partes (cada uma delas v&#225;lida) de acordo com o seu conte&#250;do: tabuleiro; posi&#231;&#227;o; comandos;
</li><li> n&#227;o ter linhas ap&#243;s a sec&#231;&#227;o que define os comandos;
</li></ul><p>Como resultado &#233; devolvido um <code>Int</code> cujo valor varia entre <em>-1</em> caso o ficheiro seja v&#225;lido e <code>erro</code> em que <em>erro</em> &#233; a primeira linha
em que o ficheiro n&#227;o cumpre as normas.
</p></div></div><div class="top"><p class="src"><a name="v:checkTab" class="def">checkTab</a> :: <a href="Main.html#t:Tabuleiro">Tabuleiro</a> -&gt; (Int, Int) -&gt; Int</p><div class="doc"><p><a href="checkTab.html">checkTab</a> verifica se a estrutura do <code>Tabuleiro</code> recebido est&#225; dentro das normas. Para isso faz uso de <code>(Int,Int)</code> que cont&#233;m informa&#231;&#227;o sobre as linhase e as colunas.
O tabuleiro deve conter a seguinte estrutura:
</p><ul><li> o comprimento de todas as linhas &#233; igual;
</li><li> apenas cont&#233;m letras.
</li></ul><p>Como resultado &#233; devolvido um <code>Int</code> cujo valor varia entre <em>-1</em> caso o tabuleiro esteja devidamente construido e <code>n</code> em que <em>n</em> &#233; a primeira linha
em que o tabuleiro n&#227;o cumpre as normas.
</p></div></div><div class="top"><p class="src"><a name="v:checkCmd" class="def">checkCmd</a> :: <a href="Main.html#t:Comandos">Comandos</a> -&gt; Bool</p><div class="doc"><p><a href="checkCmd.html">checkCmd</a> verifica se os <code>Comandos</code> recebidos s&#227;o v&#225;lidos. Uma sequ&#234;ncia de comandos v&#225;lida deve conter apenas as seguinte os carateres <code>A</code> (Avan&#231;ar), 
<code>S</code> (Saltar), <code>E</code> (Esquerda), <code>D</code> (Direita), <code>L</code> (Luz).
</p><p>Como resultado &#233; devolvido um <code>Bool</code> cujo valor varia entre <em>True</em> se a sequ&#234;ncia de comandos for v&#225;lida; <em>False</em> se a sequ&#234;ncia de comandos for inv&#225;lida.
</p></div></div><div class="top"><p class="src"><a name="v:checkPos" class="def">checkPos</a> :: <a href="Main.html#t:Posicao">Posicao</a> -&gt; (Int, Int) -&gt; Bool</p><div class="doc"><p><a href="checkPos.html">checkPos</a> recebe <code>(Int,Int)</code> com os limites do tabuleiro e verifica se a <code>Posicao</code> recebida est&#225; dentro do seguinte formato <code>x y ori</code>, em que:
</p><ul><li> <code>x</code> corresponde &#224; posi&#231;&#227;o do Robot no eixo das abcissas num dado tabuleiro. O seu valor deve ser inteiro e variar entre  0 e o n&#250;mero de colunas do tabuleiro (exclusive);
</li><li> <code>y</code> corresponde &#224; posi&#231;&#227;o do Robot no eixo das ordenadas num dado tabuleiro. O seu valor deve ser inteiro e variar entre o 0 e o n&#250;mero de linhas do tabuleiro (exclusive);
</li><li> <code>ori</code> corresponde &#224; orienta&#231;&#227;o do Robot. Pode apenas variar nos seguintes valores: <a href="N.html">N</a> (Norte), <a href="S.html">S</a> (Sul), <a href="E.html">E</a> (Este), <a href="O.html">O</a> (Oeste). 
</li></ul><p>Como resultado &#233; devolvido um <code>Bool</code> cujo valor varia entre <em>True</em> se a posi&#231;&#227;o for v&#225;lida; <em>False</em> se a posi&#231;&#227;o for inv&#225;lida.
</p></div></div><div class="top"><p class="src"><a name="v:deepCheck" class="def">deepCheck</a> :: <a href="Main.html#t:Tabuleiro">Tabuleiro</a> -&gt; (Int, Int) -&gt; [String] -&gt; Int</p><div class="doc"><p><a href="deepCheck.html">deepCheck</a> recebe um tabuleiro, <a href="Tabuleiro.html">Tabuleiro</a> inv&#225;lido; um par de inteiros, <code>(Int,Int)</code>, com as dimens&#245;es do tabuleiro; 
uma lista de Strings, <code>[String]</code> correspondente a todo o ficheiro em teste.
</p><p>Esta fun&#231;&#227;o reavalia qual a primeira linha em que o ficheiro divergiu das normas. Esta a&#231;&#227;o &#233; necess&#225;ria pois ficheiros com linhas ap&#243;s a 
sequ&#234;ncia de comandos s&#227;o divididos de forma incorreta.
</p><p>Como resultado &#233; devolvido um <code>Int</code> com o valor real da primeira linha onde o ficheiro diverge das normas especificadas.
</p></div></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.13.2</p></div></body></html>