
\documentclass[a4paper,12pt]{report}
\usepackage[portuges]{babel}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{textcomp}
\usepackage[pdftex]{hyperref}
\title{Projeto LightBot - Relatório}
\author{Dinis Peixoto A75353 \and Marcelo Miranda A74817}
\date{\today}

\begin{document} 


\maketitle


\tableofcontents


\chapter{Introdução}
Este trabalho foi nos requerido pelos docentes da unidade curricular \emph{Laboratórios de Informática I} e visa a execução de um jogo já existente (Lightbot) utilizando maioritariamente a linguagem de programação \emph{Haskell}, estudada numa unidade curricular adjacente a esta, \emph{Programação Funcional}. Além desta linguagem, os alunos necessitaram de ficar confortáveis com outras linguagens como \LaTeX, para a execução do relatório, Batch para uma melhor interação com os programas de compilação/interpretação assim como o Sistema de Controle de Versões (SVN), e por fim \textsc{X3DOM} para a animação do jogo. 
Foi também necessário o recurso a uma plataforma, para além da habitual Blackboard, que nos permitiu uma avaliação quantitativa automática, com base em testes predefinidos que tinham como objetivo demonstrar que o nosso programa resultava numa reposta correta (\textsc{MOOSHAK}).

\chapter{LightBot}
O jogo pode ser encontrado à venda na internet (ex: App Store, Google Play) por aproximadamente 2 euros. No entanto foi utilizada pelos alunos a versão gratuita de uma hora apenas.
O jogo consiste num robot, que encontra o problema de ligar todas as lâmpadas presentes num específico mapa, para isso estão disponíveis diversos comandos que podemos utilizar, criando uma sequência que posteriormente o robot realizará. Cada nível chega ao fim quando todas as lâmpadas presentes estão acesas, segue-se outro nível geralmente com um mapa distinto e a dificuldade acrescida.

\chapter{Análise do problema} 
As tarefas solicitadas para este trabalho, tinham objetivos completamente diferentes e, apesar de apresentarem input’s semelhantes, os output’s eram distintos entre si.

\section{Tarefa A}
A tarefa A tinha como objetivo verificar a validade de um determinado input apresentado, tendo em conta que este teria obrigatoriamente de ser composto por uma mapa (que poderia ocupar ou não várias linhas) seguido de uma linha com a posição inicial assim como a orientação do robot e por fim uma linha com os comandos que o robot deveria executar. O output desta tarefa seria \emph{OK} se o input apresentado fosse válido, ou então um número correspondente ao número da linha onde se encontrava o erro, que não permitia a validade do mesmo.


\section{Tarefa B}
A tarefa B tem o objetivo de implementar os comandos no jogo, para isso foi-nos proposto o cálculo da próxima posição do robot após um determinado comando. Por sua vez o output desta tarefa, correspondia apenas à posição e respectiva orientação do robot após a execução do primeiro comando, ou caso isto não fosse possível a mensagem \emph{ERRO}. 


\section{Tarefa C}
A tarefa C é uma tarefa onde a dificuldade cresce exponencialmente e é nada mais que a conclusão da tarefa A e B. Consiste em fazer o robot completar o mapa com que é confrontado, executando os comandos dados. Para isso o robot tem de ligar todas as lâmpadas presentes neste. O input será idêntico ao das tarefas anteriores, já o output será as coordenadas das lâmpadas ligadas seguidas de uma mensagem que pode variar, caso o robot tenha executado um número suficiente de comandos para completar o nível, ligando assim todas as lâmpadas a mensagem imprimida será \emph{FIM <número de jogadas válidas>}, caso os comandos fornecidos não sejam suficientes para finalizar o nível em que o robot se encontra, deverá ser imprimida a mensagem \emph{INCOMPLETO}.


\section{Tarefa D}
Completo o jogo em si, segue-se uma nova barreira a ultrapassar. Na tarefa D era pretendido que dado um determinado mapa e uma posição inicial e orientação do robot, o nosso programa conseguisse gerar por si só a linha de comandos que o robot teria de executar para conseguir completar o mapa. 


\section{Tarefa E}
Por fim, a tarefa E consiste na criação de um programa em Haskell, tal como nas tarefas antecedentes, que gerasse a animação do jogo. O input desta tarefa é análogo ao das três primeiras tarefas, no entanto o output é completamente distinto das tarefas anteriores, visto ser apresentado como um ficheiro \emph{xhtml} (\textsc{X3DOM}) para ser visualizado como uma página web. 


\chapter{Desenvolvimento do projecto}

\chapter{Conclusão}

\end{document}